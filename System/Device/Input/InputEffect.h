/**
 *  ファイル名
 *		InputEffect.h
 *  説明
 *		フォースフィードバックのエフェクト効果
 *  日付
 *		作成日: 2008/03/10(MON)		更新日: 2008/03/10(MON)
 */
#ifndef __InputEffect_h__
#define __InputEffect_h__

/**
 *	----------------------------------------------------------------------
 *		ヘッダファイルインクルード
 *	----------------------------------------------------------------------
 */
#include "..\..\BasicDirectX.h"

/**
 *	----------------------------------------------------------------------
 *		InputEffectInterfaceクラス
 *	----------------------------------------------------------------------
 */
class InputEffectInterface
{
/**
 *	------------------------------------------------------------
 *		メンバ変数
 *	------------------------------------------------------------
 */
  
/**
 *	------------------------------------------------------------
 *		メンバ関数
 *	------------------------------------------------------------
 */
public:
/**
 *	----------------------------------------
 *	コンストラクタとデストラクタ
 *	----------------------------------------
 */
	InputEffectInterface() {}
	virtual ~InputEffectInterface() {}
	
/**
 *	----------------------------------------
 *	オーバーライド関数
 *	----------------------------------------
 */
 	/**
	 *	説明v
 	 *		オブジェクトがNULLであるかどうか調べる
 	 */
	virtual bool isNull() const = 0;
	
	/**
	 *	説明
	 *		エフェクトの開始
	 */
	virtual bool start(const DWORD iterations) = 0;
	
	/**
	 *	説明v
	 *		エフェクトの停止
	 */
	virtual void stop(void) = 0;
 	
 	/**
	 *	説明
 	 *		エフェクトが再生中かどうか調べる
 	 */
 	virtual bool isPlaying(void) = 0;

};

/**
 *	----------------------------------------------------------------------
 *		InputEffectクラス
 *	----------------------------------------------------------------------
 */
class InputEffect : public InputEffectInterface
{
/**
 *	------------------------------------------------------------
 *		メンバ変数
 *	------------------------------------------------------------
 */
 private:
 	/**
	 *	説明
 	 *		フォース フィードバック デバイスのエフェクトを管理するインターフェイス
 	 */
 	LPDIRECTINPUTEFFECT lpDirectInputEffect;
 
/**
 *	------------------------------------------------------------
 *		メンバ関数
 *	------------------------------------------------------------
 */
public:
/**
 *	----------------------------------------
 *	コンストラクタとデストラクタ
 *	----------------------------------------
 */
 	InputEffect(LPDIRECTINPUTEFFECT pDIEffect);
 	virtual ~InputEffect();
 
/**
 *	----------------------------------------
 *	オーバーライド関数
 *	----------------------------------------
 */
 	/**
	 *	説明
 	 *		オブジェクトがNULLであるかどうか調べる
 	 */
 	virtual bool isNull(void) const {return false;}
 
 	/**
	 *	説明
	 *		エフェクトの開始
	 */
 	virtual bool start(const DWORD iterations);
 
 	/**
	 *	説明
	 *		エフェクトの停止
	 */
	virtual void stop(void) {lpDirectInputEffect->Stop();}
	
 	/**
	 *	説明
 	 *		エフェクトが再生中かどうか調べる
 	 */
 	virtual bool isPlaying(void);

 
 };


/**
 *	----------------------------------------------------------------------
 *		NullInputEffectクラス
 *			Null Objectパターン
 *			nullの代わりに何の処理も行わないオブジェクト
 *	----------------------------------------------------------------------
 */
class NullInputEffect : public InputEffectInterface
{
/**
 *	------------------------------------------------------------
 *		メンバ変数
 *	------------------------------------------------------------
 */

/**
 *	------------------------------------------------------------
 *		メンバ関数
 *	------------------------------------------------------------
 */
public:

/**
 *	----------------------------------------
 *	コンストラクタとデストラクタ
 *	----------------------------------------
 */
	NullInputEffect() {}
	virtual ~NullInputEffect() {}

/**
 *	----------------------------------------
 *	オーバーライド関数
 *	----------------------------------------
 */
 	/**
	 *	説明
 	 *		オブジェクトがNULLであるかどうか調べる
 	 */
 	virtual bool isNull(void) const {return true;}
 
 	/**
	 *	説明
	 *		エフェクトの開始
	 */
	virtual bool start(const DWORD iterations) {return true;}
 
 	/**
	 *	説明
	 *		エフェクトの停止
	 */
	virtual void stop(void) {}
	
 	/**
	 *	説明
 	 *		エフェクトが再生中かどうか調べる
 	 */
	virtual bool isPlaying(void) { return false; }
};
 
#endif	/// __InputEffect_h__